/**
 * Numbo is a Javascript library to convert number and monetary amount
 * to written text in multiple languages.
 * Also helpful for writing cheques (checks). Supports English, and 支援中文.
 * 
 * Numbo is open source in:
 * https://github.com/Edditoria/numbo
 * 
 * @author Edditoria
 * @license MIT
 * Code released under the MIT license:
 * https://github.com/Edditoria/numbo/blob/master/LICENSE.txt
 * 
 */

(function(g,f){typeof exports==="object"&&typeof module!=="undefined"?module.exports=f():typeof define==="function"&&define.amd?define(f):(g=typeof globalThis!=="undefined"?globalThis:g||self,g.numbo=f())})(this,(function(){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}function parse99(arr1,arr10){var separator=arguments.length>2&&arguments[2]!==undefined?arguments[2]:" ";var i,lenArr1,num,results;lenArr1=arr1.length;results=[];for(num=i=0;i<=99;num=++i){if(num<lenArr1){results.push(arr1[num])}else if(num%10===0){results.push(arr10[Math.floor(num/10)])}else{results.push(arr10[Math.floor(num/10)]+separator+arr1[num%10].toLowerCase())}}return results}function trimWhitespace(str){return str.replace(/^\s+|\s+$/g,"")}function parseCents(dec){return(dec+"000").slice(0,2)}function parseType(type){switch(type){case null:case"number":case"num":return"number";case"cheque":case"check":case"chk":case"chq":return"cheque";case"amount":case"amt":return"amount"}console.log("Error: option.type in enUS is not valid");return false}function speakByDigit(str,n1){var separator=arguments.length>2&&arguments[2]!==undefined?arguments[2]:" ";var i,item,len,output;if(typeof str==="string"&&str.search(/\D/g)<0){output=[];for(i=0,len=str.length;i<len;i++){item=str[i];output.push(n1[+item])}return output.join(separator)}else{console.log("Error: Invalid argument of speakByDigit()");return null}}function check(input){var acceptRegex,commaAfterDot,dotCount,illegalStr,inputStr,result;result=false;inputStr=input.toString();acceptRegex=/^[\+\-\$]*[\d\.\,]*|[\d\.\,]*/g;illegalStr=inputStr.replace(acceptRegex,"");dotCount=(inputStr.match(/\./g)||[]).length;commaAfterDot=inputStr.indexOf(",",inputStr.indexOf("."))>0;if(illegalStr===""&&dotCount<2&&!commaAfterDot){result=true}return result}function splitNum(input){var output;if(typeof input!=="string"){input=input.toString()}if(input.indexOf(".")===-1){output=[input,""]}else{output=input.split(".")}if(output[0]===""){output[0]="0"}return output}function normalize(input){var dotIndex,inputArr,output,regexHead,regexTail;if(typeof input!=="string"){input=input.toString()}regexHead=/,|^[$|\-]*(0|,)*(?!\.)/g;regexTail=/0*$/g;dotIndex=input.indexOf(".");if(dotIndex===-1){output=input.replace(regexHead,"")}else{inputArr=splitNum(input);inputArr[0]=inputArr[0].replace(regexHead,"");inputArr[1]=inputArr[1].replace(regexTail,"");output=inputArr.join(".")}if(output.indexOf(".")===0){output="0"+output}if(output===""){output="0"}return output.replace(/\.$/,"")}function adjustDecimal(str){var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"ceil";var dp=arguments.length>2&&arguments[2]!==undefined?arguments[2]:2;var carryInt,dec,dotIndex,int,parseDec;if(typeof str!=="string"){str=str.toString()}dotIndex=str.indexOf(".");if(dotIndex===-1){return str}if(type!=="ceil"&&type!=="floor"&&type!=="round"){type="ceil";console.log("Error: type in adjustDecimal() is invalid. Use the default option (Math.ceil)")}if(typeof dp!=="number"||dp<0){dp=2;console.log("Error: dp in adjustDecimal() is invalid. Use the default option (adjust to 2 decimal place)")}parseDec=function parseDec(dec,type,dp){dec="0."+dec;dec=Math[type](+(dec+"e+"+dp));dec=+(dec+"e-"+dp);if(dec===0){return""}else if(dec===1){return"1"}else{return(dec+"").replace(/^0/g,"")}};carryInt=function carryInt(int){var index,intArr,isCarry,len,thisChar;len=int.length;if(len<16){return+int+1+""}else{intArr=int.split("");index=len;isCarry=true;while(index&&isCarry){index--;thisChar=+intArr[index]+1+"";if(thisChar==="10"){thisChar="0"}else{isCarry=false}intArr[index]=thisChar}if(isCarry){intArr.unshift("1")}return intArr.join("")}};if(type==="ceil"||type==="round"){int=str.slice(0,dotIndex);dec=str.slice(dotIndex+1);dec=parseDec(dec,type,dp);if(dec==="1"){dec="";int=carryInt(int)}return int+dec}else if(type==="floor"){int=str.slice(0,dotIndex);dec=str.slice(dotIndex,dotIndex+dp+1);if(+dec===0){dec=""}return int+dec}else{console.log("Error: Unknown error in adjustDecimal()");return str}}function splitInt(int){var digit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:3;var intTail,len,output,times;if(typeof int!=="string"){int=int.toString()}output=[];times=Math.ceil(int.length/digit);while(times){len=int.length;intTail=int.substring(len-digit,len);int=int.substring(0,len-digit);output.unshift(intTail);times--}return output}function parseLang(lang){var lang1,lang2,re;re=/^[a-z]{2}[A-Z]{2}$/g;if(re.test(lang)){return lang}lang=lang.replace(/\-|\_/g,"");if(lang.length!==4){console.log("Error: options.lang does not meet the Numbo standard.");return false}lang1=lang.substring(0,2).toLowerCase();lang2=lang.substring(2).toUpperCase();return lang1+lang2}var defaultOptions,n1,n10,n1000,n1withZero,n99,speak999,speakAmt,speakInt,speakNum;defaultOptions={type:"number",zeroCent:false};n1=["","One","Two","Three","Four","Five","Six","Seven","Eight","Nine","Ten","Eleven","Twelve","Thirteen","Fourteen","Fifteen","Sixteen","Seventeen","Eighteen","Nineteen"];n1withZero=["Zero","One","Two","Three","Four","Five","Six","Seven","Eight","Nine","Ten","Eleven","Twelve","Thirteen","Fourteen","Fifteen","Sixteen","Seventeen","Eighteen","Nineteen"];n10=["","Ten","Twenty","Thirty","Forty","Fifty","Sixty","Seventy","Eighty","Ninety"];n1000=["","Thousand","Million","Billion","Trillion","Quadrillion","Quintillion","Sextillion","Septillion","Octillion","Nonillion","Decillion","Undecillion","Duodecillion","Tredecillion","Quattuordecillion","Quindecillion","Sexdecillion","Septendecillion","Octodecillion","Novemdecillion","Vigintillion"];n99=parse99(n1,n10,"-");speak999=function speak999(num){var addAnd=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var d100,hundred;if(num<=99){return n99[num]}if(num%100===0){return n1[Math.floor(num/100)]+" Hundred"}d100=Math.floor(num/100);hundred=addAnd?" Hundred and ":" Hundred ";return n1[d100]+hundred+n99[num%100]};speakInt=function speakInt(numArr){var addAnd=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var i,item,len,num,output,times,unit;output=[];times=numArr.length;for(num=i=0,len=numArr.length;i<len;num=++i){item=numArr[num];times--;if(item!=="000"){unit=" "+n1000[times];item=speak999(parseInt(item,10),addAnd);output.push(item+unit)}}return trimWhitespace(output.join(" "))};speakNum=function speakNum(str){var dec,int,intArr,strSplited;if(str==="0"){return"zero"}if(str==="1"){return"one"}strSplited=splitNum(str);intArr=splitInt(strSplited[0]);int=speakInt(intArr);if(int===""){int="zero"}dec=strSplited[1]===""?"":" point "+speakByDigit(strSplited[1],n1withZero," ");return(int+dec).toLowerCase()};speakAmt=function speakAmt(str,type,zeroCent){var andWord,cents,dec,dollarUnit,dollars,int,intArr,output,strSplited;if(str==="0"){output="Null"}else{dollarUnit=["Dollar","Dollars"];str=adjustDecimal(str,"ceil",2);strSplited=splitNum(str);intArr=splitInt(strSplited[0]);int=speakInt(intArr,false);dollars=int===""?"":int==="One"?" "+dollarUnit[0]:" "+dollarUnit[1];dec=n99[+parseCents(strSplited[1])];cents=dec===""&&int===""?"Null":dec===""?"No Cent":dec==="One"?" Cent":" Cents";andWord=dollars===""?"":" and ";output=int+dollars+andWord+dec+cents}output=type==="cheque"?output==="Null"?"Null":output+" Only":type==="amount"?output.replace(" and No Cent","").toLowerCase():(console.log("Error: Option in speakAmt() is invalid."),output=null);if(zeroCent===true){output=output.replace("and No Cent","and Zero Cent")}return output};function enUS(input){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:defaultOptions;var zeroCent;if(input===""){return null}if(input==="1e+100"){return"Ding! One Google... Oops... One Googol!!"}if(check(input)===false){console.log("Error: Invalid input value. Return null");return null}input=normalize(input);switch(options.type){case null:case"number":case"num":return speakNum(input);case"cheque":case"check":case"chk":case"chq":zeroCent=options.zeroCent===true?true:false;return speakAmt(input,"cheque",zeroCent);case"amount":case"amt":return speakAmt(input,"amount",false);default:console.log("Error: options.type in enUS is not valid");return null}}var n1$1,n10$1,n10Simple,n1Simple,nLarge,speak9999,speakAmt$1,speakInt$1,speakNum$1;n1$1=["零","壹","貳","叁","肆","伍","陸","柒","捌","玖"];n1Simple=["零","一","二","三","四","五","六","七","八","九"];n10$1=["","拾","佰","仟"];n10Simple=["","十","百","千"];nLarge=["","萬","億","兆","京","垓","秭","穰","溝","澗","正","載"];speak9999=function speak9999(str){var isSimple=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var eachNum,i,num,output,ref,speakN1,speakN10,times,unit;speakN1=isSimple?n1Simple:n1$1;speakN10=isSimple?n10Simple:n10$1;times=str.length-1;output="";for(num=i=0,ref=times;0<=ref?i<=ref:i>=ref;num=0<=ref?++i:--i){eachNum=+str[num];unit=eachNum===0?"":speakN10[times-num];output+=speakN1[eachNum]+unit}if(output==="零零零零"){return"零"}else{return output.replace(/\零+$/g,"")}};speakInt$1=function speakInt(str){var isSimple=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var i,item,itemNum,len,num,output,speakItem,strArr,times,unit;if(str==="0"){return"零"}strArr=splitInt(str,4);times=strArr.length-1;output="";for(num=i=0,len=strArr.length;i<len;num=++i){item=strArr[num];speakItem=speak9999(item,isSimple);if(num===0){itemNum=parseInt(item,10);if(itemNum>9&&itemNum<20){speakItem=speakItem.replace(/^[\一\壹]|\零/g,"")}}unit=speakItem==="零"?"":nLarge[times-num];output+=speakItem+unit}return output.replace(/\零+$/g,"").replace(/\零+/g,"零")};speakNum$1=function speakNum(str){var dec,dot,int,strSplited;strSplited=splitNum(str);int=strSplited[0];dec=strSplited[1];dot=dec===""?"":"點";return speakInt$1(int,true)+dot+speakByDigit(dec,n1Simple,"")};speakAmt$1=function speakAmt(str){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"cheque";var cent,cent1,cent2,dec,dollar,dp1,dp2,int,isSimple,speakN1,strSplited;str=adjustDecimal(str,"ceil",2);strSplited=splitNum(str);int=strSplited[0];dec=+parseCents(strSplited[1]);if(int==="0"&&dec===0){return"零元"}isSimple=options==="cheque"?false:true;dollar=int==="0"?"":int==="2"&&options!=="cheque"?"兩元":speakInt$1(int,isSimple)+"元";cent=dec===0?options==="cheque"?"正":"":(speakN1=isSimple?n1Simple:n1$1,dp1=Math.floor(dec/10),dp2=dec%10,cent1=dp1===0?"":dp1===2&&options!=="cheque"?"兩角":speakN1[dp1]+"角",cent2=dp2===0?"":dp2===2&&options!=="cheque"?"兩分":speakN1[dp2]+"分",cent=cent1+cent2);return dollar+cent};function zhTW(input){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{type:"number"};if(input===""){return null}if(input==="1e+100"){return"Ding! One Google... Oops... One Googol!!"}if(check(input)===false){console.log("Error: Invalid input value. Return null");return null}input=normalize(input);switch(options.type){case null:case"number":case"num":return speakNum$1(input);case"cheque":case"check":case"chk":case"chq":return speakAmt$1(input,"cheque");case"amount":case"amt":return speakAmt$1(input,"amount");default:console.log("Error: Option in zhTW is not valid");return null}}var n1$2,n10$2,n10Simple$1,n1Simple$1,nLarge$1,speak9999$1,speakAmt$2,speakInt$2,speakNum$2;n1$2=["零","壹","贰","叁","肆","伍","陆","柒","捌","玖"];n1Simple$1=["零","一","二","三","四","五","六","七","八","九"];n10$2=["","拾","佰","仟"];n10Simple$1=["","十","百","千"];nLarge$1=["","万","亿","兆","京","垓","秭","穰","沟","涧","正","载"];speak9999$1=function speak9999(str){var isSimple=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var eachNum,i,num,output,ref,speakN1,speakN10,times,unit;speakN1=isSimple?n1Simple$1:n1$2;speakN10=isSimple?n10Simple$1:n10$2;times=str.length-1;output="";for(num=i=0,ref=times;0<=ref?i<=ref:i>=ref;num=0<=ref?++i:--i){eachNum=+str[num];unit=eachNum===0?"":speakN10[times-num];output+=speakN1[eachNum]+unit}if(output==="零零零零"){return"零"}else{return output.replace(/\零+$/g,"")}};speakInt$2=function speakInt(str){var isSimple=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var i,item,itemNum,len,num,output,speakItem,strArr,times,unit;if(str==="0"){return"零"}strArr=splitInt(str,4);times=strArr.length-1;output="";for(num=i=0,len=strArr.length;i<len;num=++i){item=strArr[num];speakItem=speak9999$1(item,isSimple);if(num===0){itemNum=parseInt(item,10);if(itemNum>9&&itemNum<20){speakItem=speakItem.replace(/^[\一\壹]|\零/g,"")}}unit=speakItem==="零"?"":nLarge$1[times-num];output+=speakItem+unit}return output.replace(/\零+$/g,"").replace(/\零+/g,"零")};speakNum$2=function speakNum(str){var dec,dot,int,strSplited;strSplited=splitNum(str);int=strSplited[0];dec=strSplited[1];dot=dec===""?"":"点";return speakInt$2(int,true)+dot+speakByDigit(dec,n1Simple$1,"")};speakAmt$2=function speakAmt(str){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"cheque";var cent,cent1,cent2,dec,dollar,dp1,dp2,int,isSimple,speakN1,strSplited;str=adjustDecimal(str,"ceil",2);strSplited=splitNum(str);int=strSplited[0];dec=+parseCents(strSplited[1]);if(int==="0"&&dec===0){return"零元"}isSimple=options==="cheque"?false:true;dollar=int==="0"?"":int==="2"&&options!=="cheque"?"两元":speakInt$2(int,isSimple)+"元";cent=dec===0?options==="cheque"?"整":"":(speakN1=isSimple?n1Simple$1:n1$2,dp1=Math.floor(dec/10),dp2=dec%10,cent1=dp1===0?"":dp1===2&&options!=="cheque"?"两角":speakN1[dp1]+"角",cent2=dp2===0?"":dp2===2&&options!=="cheque"?"两分":speakN1[dp2]+"分",cent=cent1+cent2);return dollar+cent};function zhCN(input){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{type:"number"};if(input===""){return null}if(input==="1e+100"){return"Ding! One Google... Oops... One Googol!!"}if(check(input)===false){console.log("Error: Invalid input value. Return null");return null}input=normalize(input);switch(options.type){case null:case"number":case"num":return speakNum$2(input);case"cheque":case"check":case"chk":case"chq":return speakAmt$2(input,"cheque");case"amount":case"amt":return speakAmt$2(input,"amount");default:console.log("Error: Option in zhCN is not valid");return null}}var Numbo,convert,defaultOptions$1,langs,resetOptions,setOptions,utils;utils={trimWhitespace:trimWhitespace,parse99:parse99,parseCent:parseCents,parseCents:parseCents,parseType:parseType,speakByDigit:speakByDigit,check:check,validate:check,normalize:normalize,normalise:normalize,adjustDecimal:adjustDecimal,splitNum:splitNum,splitInt:splitInt};langs={enUS:enUS,zhTW:zhTW,zhCN:zhCN};defaultOptions$1={lang:"enUS",type:"number"};setOptions=function setOptions(options){Object.assign(this.options,options);return this.options};resetOptions=function resetOptions(){this.options=Object.assign({},defaultOptions$1);return this.options};convert=function convert(input,options){var oneTimeOptions;oneTimeOptions=Object.assign({},this.options,options);oneTimeOptions.lang=parseLang(oneTimeOptions.lang);if(oneTimeOptions.lang===false){return null}if(langs[oneTimeOptions.lang]==null){console.log("Error: Cannot find the lang function:",options.lang);return null}return langs[oneTimeOptions.lang](input,oneTimeOptions)};Numbo=function Numbo(options){_classCallCheck(this,Numbo);if(options==null){this.options=defaultOptions$1}else{this.options=Object.assign({},defaultOptions$1,options)}};Numbo.prototype.convert=convert;Numbo.prototype.utils=utils;Numbo.prototype.enUS=enUS;Numbo.prototype.zhTW=zhTW;Numbo.prototype.zhCN=zhCN;Numbo.prototype.getDefaultOptions=function(){return defaultOptions$1};Numbo.prototype.getOptions=function(){return this.options};Numbo.prototype.setOptions=setOptions;Numbo.prototype.resetOptions=resetOptions;var Numbo$1=Numbo;return Numbo$1}));