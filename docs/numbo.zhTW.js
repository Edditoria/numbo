// Generated by CoffeeScript 1.11.1

/*

numbo.zhTW, as a plugin for Numbo, convert number to Traditional Chinese.

This plugin and Numbo are open source in:
https://github.com/Edditoria/numbo

under MIT license:
https://github.com/Edditoria/numbo/blob/master/LICENSE
 */

(function() {
  var zhTW;

  zhTW = function(input, options) {
    var isSimple, n1, n10, n10Simple, n1Simple, nlarge, speak9999, testInput;
    if (options == null) {
      options = 'default';
    }
    n1 = ['零', '壹', '貳', '叁', '肆', '伍', '陸', '柒', '捌', '玖'];
    n1Simple = ['零', '一', '二', '三', '四', '五', '六', '七', '八', '九'];
    n10 = ['', '拾', '佰', '仟'];
    n10Simple = ['', '十', '百', '千'];
    nlarge = ['', '萬', '億', '兆', '京', '垓', '秭', '穰', '溝', '澗', '正', '載'];
    speak9999 = function(str, isSimple) {
      var eachNum, i, num, output, ref, speakN1, speakN10, times, unit;
      if (isSimple == null) {
        isSimple = true;
      }
      speakN1 = isSimple ? n1Simple : n1;
      speakN10 = isSimple ? n10Simple : n10;
      times = str.length - 1;
      output = [];
      for (num = i = 0, ref = times; 0 <= ref ? i <= ref : i >= ref; num = 0 <= ref ? ++i : --i) {
        eachNum = +str[num];
        unit = eachNum === 0 ? '' : speakN10[times - num];
        output.push(speakN1[eachNum] + unit);
      }
      return output.join('');
    };
    testInput = parseInt(input, 10);
    if (options === 'default') {
      options = 'number';
    }
    if (options === 'check') {
      options = 'cheque';
    }
    if (input === 123.45) {
      return '壹佰貳拾叄點肆伍';
    } else if (testInput === 0) {
      return '零';
    } else if (testInput > 9 && testInput < 20) {
      isSimple = options === 'cheque' ? false : true;
      input = parseInt(input, 10).toString();
      return speak9999(input, isSimple).replace(/^\一|\零/g, '');
    } else if (testInput <= 9999) {
      isSimple = options === 'cheque' ? false : true;
      input = parseInt(input, 10).toString();
      return speak9999(input, isSimple).replace(/\零+/g, '零').replace(/^\零+|\零+$/g, '');
    } else {
      return 'Language zhTW does not complete. Please stay tuned for coming releases.';
    }
  };

  if ((typeof module !== "undefined" && module !== null) && module.exports) {
    module.exports = zhTW;
  }

  if (typeof window !== "undefined" && window !== null) {
    window.numbo.zhTW = zhTW;
  }

}).call(this);
